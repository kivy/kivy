name: OSX Unittests

on: [push, pull_request]

env:
  KIVY_SPLIT_EXAMPLES: 1
  KIVY_GL_BACKEND: 'mock'
  CC: clang
  CXX: clang
  FFLAGS: '-ff2c'
  USE_SDL2: 1

jobs:
  unit_test:
    name: "unit_test (${{ matrix.runs_on }}, ${{ matrix.python }})"
    defaults:
      run:
        shell: ${{ matrix.run_wrapper || 'bash --noprofile --norc -eo pipefail {0}' }}
    runs-on: ${{ matrix.runs_on || 'macos-11' }}
    strategy:
      matrix:
        include:
          - runs_on: macos-11
            python: '3.9'
          - runs_on: apple-silicon-m1
            run_wrapper: arch -arm64 bash --noprofile --norc -eo pipefail {0}
            python: '3.9.7'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      # Needs to be skipped on our self-hosted runners tagged as 'apple-silicon-m1'
      if: ${{ matrix.runs_on  != 'apple-silicon-m1' }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Cache macOS deps downloads
      uses: actions/cache@v2
      with:
        path: osx-cache
        key: ${{ runner.OS }}-build-${{ hashFiles('.ci/osx_versions.sh') }}
    - name: Install dependencies
      run: |
        source .ci/ubuntu_ci.sh
        source .ci/osx_versions.sh
        source .ci/osx_ci.sh
        arm64_set_path_and_python_version ${{ matrix.python }}
        build_and_install_universal_kivy_sys_deps
        install_kivy_test_run_pip_deps dev
    - name: Install Kivy
      run: |
        source .ci/ubuntu_ci.sh
        source .ci/osx_ci.sh
        arm64_set_path_and_python_version ${{ matrix.python }}
        install_kivy dev
    - name: Test Kivy
      run: |
        source .ci/ubuntu_ci.sh
        source .ci/osx_ci.sh
        arm64_set_path_and_python_version ${{ matrix.python }}
        test_kivy
