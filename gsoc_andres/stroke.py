from kivy.properties import (NumericProperty, ListProperty, BooleanProperty, DictProperty)
from kivy.graphics import Color

from enum import Enum, unique

class Stroke:
    
    '''
    Stroke
    ===================
    
    This class allows you to easily manipulate points on
    an InkCanvas, handles some drawing attributes and methods
    to perform changes on the points::
    
        # Create a Stroke and modify attributes
        stroke = Stroke(group_id=g)
        stroke.color = Stroke.Color.Yellow
        stroke.isHighlighter(0.5)
        stroke.points.append(Point(touch.x, touch.y))
    
    .. warning::
    
       You won't really instantiate Strokes: it's more an example how 
       InkCanvas handle strokes. Typically, you would use the list of strokes 
       generated by InkCanvas for further processing.
    
    '''
    
    '''Default Constructor'''
    def __init__(self, group_id=""):
        self.points = []
        self.color = self.Color.Black
        self.point_size = 1
        self.group_id = group_id
    
    def __eq__(self, other):
        '''Override default Equals behaviour'''
        if isinstance(other, self.__class__):
            return self.__dict__ == other.__dict__
        return False
    
    def __ne__(self, other):
        '''Define a non equality test'''
        return not self.__eq__(other)
    
    def __str__(self):
        '''String representation'''
        cad = "["
        for point in self.points:
            cad += "(%s, %s)," % (point.X, point.Y)
        return cad[:-1] + "]"
    
    def __repr__(self):
        '''print Point'''
        cad = "<%s> [" % (self.__class__.__name__)
        for point in self.points:
            cad += "(%r, %r)," % (point.X, point.Y)
        return cad[:-1] + "]"
    
    def isHighlighter(self, alfa):
        self.color = self.color + (alfa,)

    def hit_test(self, p):
        for point in self.points:
            dist = point.distance_to(p)
            if dist < 5.0:
                return True
        return False

    class Color:
        '''Values for different colors so a Stroke can 
        change its color by name, rather than a tuple
        '''
        AliceBlue = (0.941176, 0.972549, 1)
        AntiqueWhite = (0.980392, 0.921569, 0.843137)
        AquaMarine = (0.498039, 1, 0.831373)
        Azure = (0.941176, 1, 1)
        Beige = (0.960784, 0.960784, 0.862745)
        Black = (0,0,0)
        Blue = (0,0,1)
        BlueViolet = (0.541176, 0.168627, 0.886275)
        Brown = (0.647059, 0.164706, 0.164706)
        Cyan = (0,1,1)
        DarkBlue = (0,0,0.545098)
        DarkCyan = (0,0.545098, 0.545098)
        Green = (0,1,0)
        Grey = (0.745098, 0.745098, 0.745098)
        Indigo = (0.294118, 0, 0.509804)
        Yellow = (1,1,0)
        White = (1,1,1)
        